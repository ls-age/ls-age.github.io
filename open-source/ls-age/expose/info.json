{"nameWithOwner":"ls-age/expose","url":"https://github.com/ls-age/expose","description":"The easy way to expose a module for CLI usage","pushedAt":"2019-04-12T10:57:04Z","stargazers":{"totalCount":0},"releases":{"nodes":[{"tagName":"v0.3.1-beta.1"}]},"readme":{"title":"@ls-age/expose","slug":"ls-ageexpose","sections":[{"title":"Installation","slug":"installation"},{"title":"Usage","slug":"usage"}],"content":"<h1 id=\"ls-ageexpose\">@ls-age/expose</h1><blockquote>\n<p><strong>Work in progress</strong></p>\n<p>The easy way to expose a module for CLI usage</p>\n</blockquote>\n<p><a href=\"https://circleci.com/gh/ls-age/expose\"><img src=\"https://circleci.com/gh/ls-age/expose.svg?style=svg\" alt=\"CircleCI\"></a>\n<a href=\"https://greenkeeper.io/\"><img src=\"https://badges.greenkeeper.io/ls-age/expose.svg\" alt=\"Greenkeeper badge\"></a></p>\n<h2 id=\"installation\">Installation</h2><pre><code class=\"language-bash\">npm install --save @ls-age/expose</code></pre>\n<h2 id=\"usage\">Usage</h2><pre><code class=\"language-javascript\"><span class=\"hljs-keyword\">import</span> Expose, { Command, NumberOption } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@ls-age/expose'</span>;\n<span class=\"hljs-keyword\">import</span> { version, description } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'../package.json'</span>;\n\n<span class=\"hljs-keyword\">const</span> cli = <span class=\"hljs-keyword\">new</span> Expose({ description });\ncli.addHelp();\ncli.addVersion(version);\n\n<span class=\"hljs-keyword\">const</span> testCommand = <span class=\"hljs-keyword\">new</span> Command({\n  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'test'</span>,\n  <span class=\"hljs-attr\">description</span>: <span class=\"hljs-string\">'Just for testing'</span>,\n  <span class=\"hljs-attr\">alias</span>: <span class=\"hljs-string\">'try'</span>,\n  run({ options }) {\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Running test command with options'</span>, options);\n  },\n});\ntestCommand.addOption(<span class=\"hljs-keyword\">new</span> NumberOption({\n  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'log-level'</span>,\n  <span class=\"hljs-attr\">description</span>: <span class=\"hljs-string\">'Set log level'</span>,\n  <span class=\"hljs-attr\">alias</span>: <span class=\"hljs-string\">'l'</span>,\n  <span class=\"hljs-keyword\">async</span> <span class=\"hljs-keyword\">set</span>(level) {\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Setting log level to'</span>, level);\n\n    <span class=\"hljs-comment\">// Setting the log level takes some time, so we use an async function</span>\n    <span class=\"hljs-keyword\">await</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Promise</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">resolve</span> =&gt;</span> setTimeout(resolve, <span class=\"hljs-number\">1000</span>));\n\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Log level was set'</span>);\n  },\n}));\ncli.addCommand(testCommand);\n\ncli.run();</code></pre>\n"}}