{"nameWithOwner":"ls-age/rollup-plugin-run","url":"https://github.com/ls-age/rollup-plugin-run","description":"Run a bundled node module while watching for changes","pushedAt":"2019-04-12T11:34:13Z","stargazers":{"totalCount":0},"releases":{"nodes":[{"tagName":"v0.2.0"}]},"readme":{"title":"@ls-age/rollup-plugin-run","slug":"ls-agerollup-plugin-run","sections":[{"title":"Installation","slug":"installation"},{"title":"Usage","slug":"usage"},{"title":"Options","slug":"options"},{"title":"Hooks","slug":"hooks"}],"content":"<h1 id=\"ls-agerollup-plugin-run\">@ls-age/rollup-plugin-run</h1><blockquote>\n<p>Run a bundled node module while watching for changes.</p>\n</blockquote>\n<p><a href=\"https://circleci.com/gh/ls-age/workflows/rollup-plugin-run/\"><img src=\"https://circleci.com/gh/ls-age/rollup-plugin-run.svg?style=svg\" alt=\"CircleCI\"></a>\n<a href=\"https://greenkeeper.io/\"><img src=\"https://badges.greenkeeper.io/ls-age/rollup-plugin-run.svg\" alt=\"Greenkeeper\"></a></p>\n<h2 id=\"installation\">Installation</h2><pre><code>npm i --save-dev @ls-age/rollup-plugin-run</code></pre><h2 id=\"usage\">Usage</h2><p>Include the following in the rollup config:</p>\n<pre><code class=\"language-javascript\"><span class=\"hljs-keyword\">import</span> run <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@ls-age/rollup-plugin-run'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n  ...\n  plugins: [\n    run(<span class=\"hljs-comment\">/* options */</span>),\n  ],\n  <span class=\"hljs-attr\">output</span>: {\n    <span class=\"hljs-attr\">file</span>: <span class=\"hljs-string\">'./out/server.js'</span>,\n    <span class=\"hljs-attr\">format</span>: <span class=\"hljs-string\">'cjs'</span>,\n  }\n  ...\n}</code></pre>\n<h2 id=\"options\">Options</h2><blockquote>\n<p>For a full list of options browse the source code.</p>\n</blockquote>\n<p>The plugin decides what command / module to run based on some options:</p>\n<ul>\n<li><p><code>command</code> The command to run. Defaults to <code>&#39;node&#39;</code>.</p>\n</li>\n<li><p><code>args</code> An array with arguments to pass. Useful in combination with <em>command</em>.</p>\n</li>\n<li><p><code>run</code> The file to watch. If no <em>args</em> are passed <em>run</em> is passed to <em>command</em>. Defaults to the first file in the <em>output</em> configuration with <em>format</em> set to <code>&#39;cjs&#39;</code>.</p>\n</li>\n</ul>\n<h2 id=\"hooks\">Hooks</h2><ul>\n<li><code>onStart</code> Called when the process has been started, with the process passed.</li>\n<li><code>onStop</code> Called when the process has been stopped.</li>\n</ul>\n<p><strong>Examples:</strong></p>\n<p>Assuming <em>output</em> is set to <code>{ file: &#39;./out/server.js&#39;, format: &#39;cjs&#39; }</code> in the rollup configuration.</p>\n<pre><code class=\"language-javascript\">run() <span class=\"hljs-comment\">// 'node ./out/server.js' is run after each build</span>\nrun({ <span class=\"hljs-attr\">run</span>: <span class=\"hljs-string\">'./another.js'</span> }) <span class=\"hljs-comment\">// 'node ./another.js' is run</span>\nrun({ <span class=\"hljs-attr\">command</span>: <span class=\"hljs-string\">'echo'</span> }) <span class=\"hljs-comment\">// 'echo ./out/server.js' is run</span>\nrun({ <span class=\"hljs-attr\">command</span>: <span class=\"hljs-string\">'micro-dev'</span>, <span class=\"hljs-attr\">args</span>: [] }) <span class=\"hljs-comment\">// 'micro' is run</span></code></pre>\n"}}